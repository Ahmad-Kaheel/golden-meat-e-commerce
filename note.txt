#############################
#############################
#############################
# dockerfile:
# FROM python:3.8-slim
# ENV PIP_DISABLE_PIP_VERSION_CHECK 1
# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1
# WORKDIR /code
# COPY ./udjrequirements.txt .
# RUN apt-get update -y && \
#     apt-get install -y netcat-openbsd && \
#     pip install --upgrade pip && \
#     pip install -r udjrequirements.txt
# COPY ./entrypoint.sh /code/entrypoint.sh
# RUN chown -R $USER:$USER /code/entrypoint.sh
# RUN chmod +x /code/entrypoint.sh
# COPY . .
# CMD ["sh", "/code/entrypoint.sh"]
#
#
#
#
# dockercompose:
#version: "3.9"
# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --no-input
#     volumes:
#       - .:/code
#     ports:
#       - 8000:8000
#     depends_on:
#       - db
#   db:
#     image: postgres:alpine
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=myuser
#       - POSTGRES_PASSWORD=mypassword
#       - POSTGRES_DB=mydatabase
# volumes:
#   postgres_data:
#
#
#
#
#
# 
#
# entrypoint:
##!/bin/sh
# echo 'Waiting for postgres...'
# while ! nc -z db 5432; do
#     sleep 0.1
# done
# echo 'PostgreSQL started'
# echo 'Running migrations...'
# python manage.py migrate
# echo 'Collecting static files...'
# python manage.py collectstatic --no-input
# exec "$@"
#
#
#
# 
#
# github/workflow:
#name: Django CI
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     services:
#       db:
#         image: postgres:alpine
#         env:
#           POSTGRES_USER: myuser
#           POSTGRES_PASSWORD: mypassword
#           POSTGRES_DB: mydatabase
#         options: >-
#           --health-cmd="pg_isready -U myuser"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=5
#         ports:
#           - 5432:5432
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
#     - name: Set up Docker Compose
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y docker-compose
#     - name: Build and Run Docker Compose
#       run: |
#         docker-compose up --build -d
#         docker-compose run web python manage.py migrate
#     - name: Shut down services
#       run: docker-compose down
#
#
#
# 
#ملاحظة وهي انه يجب ان يتوافق اسم الهوست في اعدادات الداتا بيس مع اسم خدمة قاعدة البيانات في ملف دوكرفايل
#
#ظهر لي خطا وهي انني احتجت لان اضع تعريف الداتا بيس في ملف الديفيلوبمينت بدل البيس
#
#يجب ان يتوافق اسماء المتغيرات في الدوكر كومبوس مع اعدادات قاعدة البيانات
#
# 
#
#
#
#
#
#
########################################################
#########################################################
##########################################################
 
 
 
 
 gcc python3-dev musl-dev tzdata libc6-dev 


 # version: "3.9"

# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
#     volumes:
#       - .:/code
#     env_file:
#       - ./.env
#     ports:
#       - 8000:8000
#     depends_on:
#       - db
#   db:
#     image: postgres:13
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=${DB_USERNAME}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_HOST_AUTH_METHOD=trust

# volumes:
#   postgres_data:


# version: "3.9"

# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
#     volumes:
#       - .:/code
#     ports:
#       - 8000:8000
#     depends_on:
#       - db
#   db:
#     image: postgres:13
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=myuser
#       - POSTGRES_PASSWORD=mypassword
#       - POSTGRES_DB=mydatabase

# volumes:
#   postgres_data:







########################################################################################
########################################################################################
في حال لم تعمل الترجمة على دوكر قم باضافة الاعتمادية التالية apt-get install -y gettext build-essential
########################################################################################
########################################################################################
# FROM python:3.8-slim

# ENV PIP_DISABLE_PIP_VERSION_CHECK=1 \
#     PYTHONDONTWRITEBYTECODE=1 \
#     PYTHONUNBUFFERED=1

# WORKDIR /code

# COPY ./udjrequirements.txt .

# # Install dependencies, including build tools
# RUN apt-get update -y && \
#     apt-get install -y libpq-dev netcat-openbsd && \
#     pip install --upgrade pip && \
#     pip install -r udjrequirements.txt

# COPY ./entrypoint.sh /code/entrypoint.sh
# RUN chown -R $USER:$USER /code/entrypoint.sh
# RUN chmod a+x /code/entrypoint.sh

# COPY . .

# CMD ["sh", "/code/entrypoint.sh"]



########################################################################################
########################################################################################
اعدادات الايميل
########################################################################################
# Email service : mailtrap
# EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
# EMAIL_PORT = '2525'
# EMAIL_HOST_USER = '4f4653374f7ae8'
# EMAIL_HOST_PASSWORD = '0b0406b76e4d50'